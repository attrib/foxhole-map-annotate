name: docker-image

on:
  push:
    branches:
      - 'master'
      - 'dev'
    tags:
      - 'v*'

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            attribdd/foxhole-map-annotate
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
      -
        name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            COMMIT_HASH=${{ github.sha }}
      -
        name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          target: caddy
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}-caddy
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            COMMIT_HASH=${{ github.sha }}

  deploy:
    needs: docker
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref_name == 'master' || github.ref_name == 'dev')
    steps:
      -
        name: Deploy to production
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.PROD_HOST }}
          username: ${{ secrets.PROD_USER }}
          key: ${{ secrets.PROD_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          script: |
            docker pull attribdd/foxhole-map-annotate:${{ github.ref_name }} attribdd/foxhole-map-annotate:${{ github.ref_name }}-caddy
            cd /mnt/deployments/foxhole-map-annotate/
            docker compose up -d